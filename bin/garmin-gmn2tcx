#!/usr/bin/env bash

# Copyright (c) 2009 Braiden Kindt
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

set -euf -o pipefail
declare root_dir
root_dir="$(cd "$(dirname "$0")/.." > /dev/null && pwd)"
declare data_dir="$root_dir/data"

declare default_in_saved_runs_dir="$root_dir/saved_runs"
declare in_saved_runs_dir="${1:-"$default_in_saved_runs_dir"}"


dump() {
  echo "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>"
  echo "<garmin_dumps>"
  for file in "$@" ; do
    if ! [ -r "$file" ] ; then
      1>&2 echo "ERROR: File does not exist or unreadable: '$file'."
      return 1
    fi
    echo "  <garmin_dump>"
    garmin_dump "$file"
    echo "  </garmin_dump>"
  done
  echo "</garmin_dumps>"
}


validate_tcx() {
  xmllint --format --nowarning --schema "$data_dir/tcx.xsd" -
}


transform_dump_to_tcx() {
  declare in_dump_file="${1?}"
  saxon-he "$in_dump_file" "$data_dir/gmn2tcx.xslt"
}


convert_all_from() {
  declare in_dir="${1?}"

  while read -r in_file; do
    declare out_file="${in_file}.tcx"
    echo "Converting '$in_file' to '$out_file'..."
    transform_dump_to_tcx <(dump "$in_file") | validate_tcx > "$out_file"
    echo "Success"
  done < <(find "$in_dir" -name '*.gmn')
}

convert_all_from "$in_saved_runs_dir"
